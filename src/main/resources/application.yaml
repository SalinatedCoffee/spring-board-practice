debug: false
management.endpoints.web.exposure.include: "*"
# change Tomcat port because Windows does weird things when using Hyper-V with Docker
server.port: 11337

logging:
  level:
    com.example.boardservice: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/board
    username: sc
    # TODO: eventually use environment var to set password
    password: 1234
  jpa:
    # Important performance optimization: turn off open session in view in production
    # tl;dr - with OSIV on, spring spins up a hibernate session for each request and keeps it alive until req is served
    # read: https://www.baeldung.com/spring-open-session-in-view
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  h2.console.enabled: true
  sql.init.mode: always
  data.rest:
    base-path: /api
    detection-strategy: annotated
  # option exposed via ThymeleafConfig.Thymeleaf3Properties
  # IDE-level documentation and autocomplete enabled via configuration-processor package
  thymeleaf3:
    decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id



---

# configures the H2 database to run in-memory, and in mysql compatibility mode
# add annotation @ActiveProfiles("testdb") to class JpaRepositoryTest to use this
# JPA automatically spins up its own test db
# add @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
#   to prevent it from spinning up its test db
spring:
  config:
    activate:
      on-profile: testdb
  datasource:
    url: jdbc:h2:mem:board;mode=mysql
    driver-class-name: org.h2.Driver
  sql.init.mode: always
  # uncomment next line to globally replace JPA's test db
  # test.database.replace: none

